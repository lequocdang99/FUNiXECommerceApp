{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    listCart: []\n  },\n  reducers: {\n    ADD_CART: (state, actions) => {\n      state.listCart = state.listCart.concat(actions.payload);\n      localStorage.setItem('cart', JSON.stringify(state.listCart));\n    },\n    UPDATE_CART: (state, actions) => {\n      state.listCart[actions.payload[0]] = {\n        ...state.listCart[actions.payload[0]],\n        quantity: state.listCart[actions.payload[0]].quantity + actions.payload[1],\n        totalPrice: (state.listCart[actions.payload[0]].quantity + actions.payload[1]) * state.listCart[actions.payload[0]].price\n      };\n      localStorage.setItem('cart', JSON.stringify(state.listCart));\n    },\n    DELETE_CART: (state, actions) => {\n      state.listCart.splice(actions.payload, 1);\n      localStorage.setItem('cart', JSON.stringify(state.listCart));\n    }\n  }\n});\nexport const {\n  ADD_CART,\n  UPDATE_CART,\n  DELETE_CART\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","listCart","reducers","ADD_CART","state","actions","concat","payload","localStorage","setItem","JSON","stringify","UPDATE_CART","quantity","totalPrice","price","DELETE_CART","splice","reducer"],"sources":["/Users/tomle/rjs-asm03/src/store/cart.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState: { listCart: [] },\n  reducers: {\n    ADD_CART: (state, actions) => {\n      state.listCart = state.listCart.concat(actions.payload);\n      localStorage.setItem('cart', JSON.stringify(state.listCart));\n    },\n    UPDATE_CART: (state, actions) => {\n      state.listCart[actions.payload[0]] = {\n        ...state.listCart[actions.payload[0]],\n        quantity:\n          state.listCart[actions.payload[0]].quantity + actions.payload[1],\n        totalPrice:\n          (state.listCart[actions.payload[0]].quantity + actions.payload[1]) *\n          state.listCart[actions.payload[0]].price,\n      };\n      localStorage.setItem('cart', JSON.stringify(state.listCart));\n    },\n    DELETE_CART: (state, actions) => {\n      state.listCart.splice(actions.payload, 1);\n      localStorage.setItem('cart', JSON.stringify(state.listCart));\n    },\n  },\n});\n\nexport const { ADD_CART, UPDATE_CART, DELETE_CART } = cartSlice.actions;\n\nexport default cartSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;EACnCE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC;EAC9BC,QAAQ,EAAE;IACRC,QAAQ,EAAE,CAACC,KAAK,EAAEC,OAAO,KAAK;MAC5BD,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACK,MAAM,CAACD,OAAO,CAACE,OAAO,CAAC;MACvDC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACP,KAAK,CAACH,QAAQ,CAAC,CAAC;IAC9D,CAAC;IACDW,WAAW,EAAE,CAACR,KAAK,EAAEC,OAAO,KAAK;MAC/BD,KAAK,CAACH,QAAQ,CAACI,OAAO,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG;QACnC,GAAGH,KAAK,CAACH,QAAQ,CAACI,OAAO,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC;QACrCM,QAAQ,EACNT,KAAK,CAACH,QAAQ,CAACI,OAAO,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,CAACM,QAAQ,GAAGR,OAAO,CAACE,OAAO,CAAC,CAAC,CAAC;QAClEO,UAAU,EACR,CAACV,KAAK,CAACH,QAAQ,CAACI,OAAO,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,CAACM,QAAQ,GAAGR,OAAO,CAACE,OAAO,CAAC,CAAC,CAAC,IACjEH,KAAK,CAACH,QAAQ,CAACI,OAAO,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,CAACQ;MACvC,CAAC;MACDP,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACP,KAAK,CAACH,QAAQ,CAAC,CAAC;IAC9D,CAAC;IACDe,WAAW,EAAE,CAACZ,KAAK,EAAEC,OAAO,KAAK;MAC/BD,KAAK,CAACH,QAAQ,CAACgB,MAAM,CAACZ,OAAO,CAACE,OAAO,EAAE,CAAC,CAAC;MACzCC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACP,KAAK,CAACH,QAAQ,CAAC,CAAC;IAC9D;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEE,QAAQ;EAAES,WAAW;EAAEI;AAAY,CAAC,GAAGlB,SAAS,CAACO,OAAO;AAEvE,eAAeP,SAAS,CAACoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}